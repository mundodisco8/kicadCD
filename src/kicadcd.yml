version: 2.1
description: The purpose of this Orb is to automate the creation of fabrication outputs of KiCad projects. By creating all the files from the same source, the risk of packing together different versions of the files is reduced (e.g. making a change to the PCB and update the gerbers, but forgetting updating the BOM)

jobs:
  initialSetup: # Minimal Orb setup: checkout the Kicad project and install the python scripts needed
    executor: kicad_on_ubuntu
    steps:
      - checkout # default working directory is "/root/project"
      - run: # create artifacts folder
          name: Create artifacts folder
          command: mkdir artifacts
      - clone_script_repo
      - persist_to_workspace:
          root: ../
          paths:
            - project
            - project/artifacts

  pickAndPlacePositions: # This job generates the pick and place positions of the components of a PCB file in an
                         # Excel file, and stores it in the artifacts folder.
    parameters:
      projectPath:
        description: "[OPTIONAL] Environmental variable containing the project's folder path"
        type: env_var_name
        default: PROJECT_PATH
      PCBFile:
        description: "[REQUIRED] File that will be used as input."
        type: string
      includeVirtualComponentsFlag:
        description: "[OPTIONAL] Determines if components marked as \"Virtual\" should be included or not. By default they aren't, but it can be helpful if you need the positions of thinks like test pads, mounting holes, fiducials, ..."
        type: boolean
        default: false
      artifactsPath:
        description: "[OPTIONAL] Path where to store the artifacts"
        type: string
        default: "/root/project/artifacts/"
    executor: kicad_on_ubuntu
    steps:
      - attach_workspace:
          at: /root/
      - clone_script_repo
      - create_pick_and_place_file:
          projectPath: << parameters.projectPath >>
          PCBFile: << parameters.PCBFile >>
          includeVirtualComponentsFlag: << parameters.includeVirtualComponentsFlag >>
          artifactsPath: << parameters.artifactsPath >>
      - store_artifacts_cmd:
          artifactsPath: <<parameters.artifactsPath >>

  gerberFiles:
    # This job generates gerber files of a PCB file and stores them in a tar file in the artifacts
    # folder.
    parameters:
      projectPath:
        description: "[REQUIRED] Environmental variable containing the project's folder path"
        type: env_var_name
        default: PROJECT_PATH
      PCBFile:
        description: "[REQUIRED] File that will be used as input."
        type: string
      configFile:
        description: "[OPTIONAL] Kiplot config file to be used."
        type: string
        default: "Kiplot_config.yaml"
      artifactsPath:
        description: "[OPTIONAL] Path where to store the artifacts"
        type: string
        default: "/root/project/artifacts/"
    executor: kicad_on_ubuntu
    steps:
      - attach_workspace:
          at: /root/
      - clone_script_repo
      - create_gerbers:
          projectPath: << parameters.projectPath >>
          PCBFile: << parameters.PCBFile >>
          configFile: << parameters.configFile >>
          artifactsPath: << parameters.artifactsPath >>
      - store_artifacts_cmd:
          artifactsPath: << parameters.artifactsPath >>

commands:
  clone_script_repo:  # Clones the repo with the auxiliary python scripts
    steps:
      - run: # Clone Python script repos
          name: Clone Script Repos
          # Clone repo at /, not workingdir
          command: git clone https://github.com/mundodisco8/KicadPythonScripts.git /KiCad_Python_Scripts

  create_pick_and_place_file:
    parameters:
      projectPath:
        type: env_var_name
      PCBFile:
        type: string
      includeVirtualComponentsFlag:
        type: boolean
        default: false
      artifactsPath:
        type: string
        default: "/root/project/artifacts/"
    steps:
      - run: # make scripts callable
          name: Make Scripts callable
          command: |
            mv "/KiCad_Python_Scripts/PositionsGenerator/PositionsGenerator.py" /usr/local/bin
            chmod +x /usr/local/bin/PositionsGenerator.py
      # Need to add support to the --all thingy with the includeVirtualComponentsFlag
      - run:
          name: Generate Positions file
          # TODO: fix that projectPath thing, as it's a bit annoying as it is now
          command: PositionsGenerator.py "${<< parameters.projectPath >>}/<< parameters.PCBFile >>"
        # unless:
        #   condition: << parameters.includeVirtualComponentsFlag >> # ...but run this when the flag is false...
        #   steps:
        #     - run: PositionsGenerator.py "${<< parameters.projectPath >>}/<< parameters.PCBFile >>.kicad_pcb"
      - run:
          name: Move Artifacts
          command: mkdir -p << parameters.artifactsPath >> && mv ${<< parameters.projectPath >>}/*_Positions.xlsx << parameters.artifactsPath >>

  create_gerbers:
    parameters:
      projectPath:
        type: env_var_name
      PCBFile:
        type: string
      configFile:
        type: string
        default: Kiplot_config.yaml
      artifactsPath:
        type: string
        default: "/root/project/artifacts/"
    steps:
      - run:
          name: Generate Gerbers
          command: |
            cd ${<< parameters.projectPath >>}
            kiplot -b "<< parameters.PCBFile >>" -c << parameters.configFile>>
            PROJECTNAME=$(basename <<parameters.PCBFile>> .kicad_pcb) # strip the extension from PCBFile and use it as project name
            mkdir -p << parameters.artifactsPath >> && tar -zcvf << parameters.artifactsPath >>/${PROJECTNAME}_Gerbers.tar.gz gerberdir/

  store_artifacts_cmd:
    parameters:
      artifactsPath:
        type: string
        default: "/root/project/artifacts/"
    steps:
      - store_artifacts:
          path: << parameters.artifactsPath >>
          destination:

executors:
  kicad_on_ubuntu:
    parameters:
      version:
        type: string
        default: "19_10_18"
    docker:
      - image: mundodisco8/kicad_on_ubuntu:<<parameters.version>>
    working_directory: ~/project/